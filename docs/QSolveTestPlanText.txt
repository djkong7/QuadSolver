Quad Solver Testing Plan		         By: Jonah Kubath, Matt Peter, Dan Kiel, John Gray	We plan on testing the quad solver program mostly with built in gcc/C tools. We plan on testing coverage by using gcc with the ‘-ftest-coverage’ and ‘-fprofile-arcs’ flags, along with the built in tool ‘gcov’. This will tell us what percent of the source lines are being executed for certain input. Automation was also handled using mostly built in tools. We use make to automate our building, cleaning, compiling, and testing. While git is not an automation tool, it helped us by automating a lot of the version control process. Unit testing was finished before we went into detail about CUnit. This means that we instead hand wrote C programs to test the individual modules of the program, mostly by using text file input and checking the output via the ‘diff’ command. 508 compliance is not applicable with this program. Browser support is not applicable with this program. Usability testing is simple since it is just a command line program. We will be testing the quad solvers usability by throwing in different inputs and seeing if we get the expected errors or output. We also automated this testing with our unit testing programs and make. Performance is not applicable with this program, since it is so small and not doing any computationally heavy operations.